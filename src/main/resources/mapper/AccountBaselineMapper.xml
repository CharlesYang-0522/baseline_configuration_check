<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team_three.base_check.mapper.AccountBaselineMapper">

    <resultMap type="com.team_three.base_check.pojo.AccountBaseline" id="AccountBaselineMap">
        <result property="caption" column="caption" jdbcType="VARCHAR"/>
        <result property="machineguid" column="mac" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="domain" column="domain" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="passwordrequired" column="passwordRequired" jdbcType="VARCHAR"/>
        <result property="sid" column="sid" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="com.team_three.base_check.vo.UserAccountVO" id="UserAccount">
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="machineguid" column="machineguid" jdbcType="VARCHAR"/>
        <result property="domain" column="domain" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="account" column="account" jdbcType="BIGINT"/>
    </resultMap>
    
    <sql id="Beas_Column_List">
        caption, machineguid, description, domain, name, passwordRequired, sid, status
    </sql>

    <!--查询所有主键和名称-->
    <select id="selectAll" resultMap="AccountBaselineMap">
        select
            <include refid="Beas_Column_List"/>
        from baseline_check.account_baseline
        <where>
            <if test="machineguid != null and machineguid != ''">
                machineguid = #{machineguid},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="domain != null and domain != ''">
                domain = #{domain},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="passwordrequired != null and passwordrequired != ''">
                passwordRequired = #{passwordrequired},
            </if>
            <if test="sid != null and sid != ''">
                sid = #{sid},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
        </where>
    </select>

    <!--查询单个-->
    <select id="selectByMachineGuid" resultMap="AccountBaselineMap">
        select
            <include refid="Beas_Column_List"/>
        from baseline_check.account_baseline
        where machineguid = #{machineguid}
    </select>

    <select id="selectAllByUser" resultMap="UserAccount">
        select
        MAX(username) AS username,baseline_check.user_profile.machineguid,Max(domain) AS domain, MAX(name) AS name,count(name) AS account
        FROM baseline_check.user_profile
        LEFT JOIN baseline_check.account_baseline
        ON  baseline_check.user_profile.machineguid = baseline_check.account_baseline.machineguid
		GROUP BY baseline_check.user_profile.machineguid
    </select>
    
    <!--根据条件查询当前表的满足条件的个数-->
    <select id="selectCount" resultType="int">
        select
          count(caption)
        from baseline_check.account_baseline
        <where>
            <if test="caption != null and caption != ''">
                caption = #{caption}
            </if>
        </where>
    </select>
    
    <!--通过实体作为筛选条件查询-->
    <select id="selectByPage" resultMap="AccountBaselineMap">
        select
            <include refid="Beas_Column_List"/>
        from baseline_check.account_baseline
        <where>
            <if test="name != null and name != ''">
                name like "%"#{name}"%"
            </if>
        </where>
        limit #{index},10;
    </select>

    <!--新增所有列-->
    <insert id="insert" parameterType="com.team_three.base_check.pojo.AccountBaseline">
        insert into baseline_check.account_baseline(caption, machineguid, description, domain, name, passwordRequired, sid, status)
        values (#{caption}, #{machineguid}, #{description}, #{domain}, #{name}, #{passwordrequired}, #{sid}, #{status})
    </insert>

    <!--通过主键修改数据-->
    <update id="updateById" parameterType="com.team_three.base_check.pojo.AccountBaseline">
        update baseline_check.account_baseline
        <set>
            <if test="machineguid != null and machineguid != ''">
                machineguid = #{machineguid},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="domain != null and domain != ''">
                domain = #{domain},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="passwordrequired != null and passwordrequired != ''">
                passwordRequired = #{passwordrequired},
            </if>
            <if test="sid != null and sid != ''">
                sid = #{sid},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
        </set>
        where caption = #{caption}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from baseline_check.account_baseline where caption = #{caption}
    </delete>

    <delete id="deleteByMachineGuid">
        delete from baseline_check.account_baseline where machineguid = #{machineguid}
    </delete>

</mapper>